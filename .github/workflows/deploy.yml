name: Build, push, deploy ðŸ’ª

on: [ push ]

jobs:

  test-build-and-push:
    name: Test, build and push
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Maven cache
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'adopt'

    - name: Build with Maven
      run: |
        locale
        java --version
        mvn -Pgithub -B package --settings maven-settings.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: docker-build-push
      uses: nais/docker-build-push@v0
      id: docker-build-push
      with:
        team: paw
        identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
        project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}

  deploy-dev:
    name: Deploy to dev gcp
    needs: test-build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' ||  github.ref == 'refs/heads/arbeidssoker_repository'
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to Dev
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          DRY_RUN: false
          RESOURCE: nais/nais-dev-gcp.yaml
          VAR: image=${{ needs.test-build-and-push.outputs.image }}

  deploy-prod:
    name: Deploy to prod-gcp
    needs: [test-build-and-push, deploy-dev]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3

      - name: Deploy to production
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          DRY_RUN: false
          RESOURCE: nais/nais-prod-gcp.yaml
          VAR: image=${{ needs.test-build-and-push.outputs.image }}

#  release:
#    name: Tag and release
#    needs: deploy-prod
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#        name: Checkout
#
#      - name: Lag tag for release
#        run: echo "TAG=$(git log -1 --pretty='%ad_%h' --date=format:'%Y%m%d%H%M%S')" >> $GITHUB_ENV
#
#      - name: Create release
#        uses: softprops/action-gh-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: release/prod@${{ env.TAG }}
#          name: Release to prod
#          prerelease: false
